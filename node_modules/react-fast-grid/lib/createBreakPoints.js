"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
exports.keys = ["xs", "sm", "md", "lg", "xl"];
// Keep in mind that @media is inclusive by the CSS specification.
function createBreakpoints(breakpoints) {
    const { 
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm[.
    values, unit, step } = breakpoints, other = __rest(breakpoints, ["values", "unit", "step"]);
    function up(key) {
        const value = typeof values[key] === "number" ? values[key] : key;
        return `@media (min-width:${value}${unit})`;
    }
    function down(key) {
        const endIndex = exports.keys.indexOf(key) + 1;
        const upperbound = values[exports.keys[endIndex]];
        if (endIndex === exports.keys.length) {
            // xl down applies to all sizes
            return up("xs");
        }
        const value = typeof upperbound === "number" && endIndex > 0 ? upperbound : key;
        return `@media (max-width:${value - step / 100}${unit})`;
    }
    function between(start, end) {
        const endIndex = exports.keys.indexOf(end);
        if (endIndex === exports.keys.length - 1) {
            return up(start);
        }
        const lowerbound = values[start];
        const upperbound = values[exports.keys[endIndex + 1]] - step / 100;
        return `@media (min-width:${lowerbound}${unit}) and (max-width:${upperbound}${unit})`;
    }
    function only(key) {
        return between(key, key);
    }
    function width(key) {
        return values[key];
    }
    return Object.assign({ keys: exports.keys,
        values,
        up,
        down,
        between,
        only,
        width }, other);
}
exports.default = createBreakpoints;
