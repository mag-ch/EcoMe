import * as React from "react";
import { Breakpoint } from "./createBreakPoints";
interface HiddenState {
    visible: boolean;
}
export interface HiddenProps {
    xsUp?: boolean;
    xsDown?: boolean;
    smUp?: boolean;
    smDown?: boolean;
    mdUp?: boolean;
    mdDown?: boolean;
    lgUp?: boolean;
    lgDown?: boolean;
    xlUp?: boolean;
    xlDown?: boolean;
    only?: Breakpoint | Breakpoint[];
    debounce?: number;
    children?: any;
}
export default class Hidden extends React.Component<HiddenProps, HiddenState> {
    private _onResizeDebounced;
    constructor(props: HiddenProps);
    private _getSafeDebounceResize;
    componentWillReceiveProps(nextProps: HiddenProps): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private _getBreakPoint;
    private _getTrueKeyInProp;
    private _isVisible;
    private _lastBreakPoint;
    private _onResize;
    private _onResizeInvoker;
    render(): any | null;
}
export {};
